//Adam2
1. Detect error with GSO -ve
                                        2. Piston activation
3. GSO token error handlings
4. TPS implementation
                                        5. John mail: 
                                            a) Azure account setup, Db + resources + our credentials
                                            b) TPS strategy, 
                                            c) GSO token not found and GSO error
                                            d) Production data refresh
6. Vomit final error and mail IT
    7. Robust check with error handling
8. Database 3 tables final strategy and implementation
json data: nvarchar(4000)
    Info table
        Identify columns, create sql, Identify in our program where to get this info
    History table: Formation of JSON and push
    log table
9. Azure email research and implementation
10. Manage better cleanup
11. Create flowchart of entire process
12. Email Formation: For every carrier
    No of records Processed
    DELIVERED
    Not Delivered: Which has no delivered Status
    Exception: Api / database error, 
13. Correct shippingAgentCode in the codeBase. Ex fedEx-->FEX
13. Deployment

//Saby
1. node.js email
2. TPS
3. GSO error check
4. Create additional columns and tables and provide sql / pseudo code
5. Provide logic for INFO table update and sql / pseudo code

GSO Delivery Status, options are:
IN TRANSIT                              inTransit
DELAYED                                 inTransit
DELIVERED                               delivered
RETURNED                                returned

Status Message of UPS:
Code       Desc
M          Order Processed                  orderProcessed
D          Delivered                        delivered
I          In Transit                       inTransit
X          Any issue [e.g. The receiver was not available at the time of the final delivery attempt/ A delivery change for this package is in progress. / The receiver will pick up the package at a UPS facility. etc]
                                            exception
P          Pickup Scan                      pickedUp

Status Message of Fedex:
AF:  At local FedEx facility                orderProcessed
AR: At local FedEx facility                 orderProcessed
CA: Shipment cancelled by sender            exception
DE: Delivery exception                      exception
DL: Delivered                               delivered
DP: Departed FedEx location                 inTransit
HA: Hold at location request accepted       inTransit
HP: Ready for recipient pickup              inTransit
IT: In transit                              inTransit
OC: Shipment information sent to FedEx      inTransit
OD: On FedEx vehicle for delivery           inTransit
PU: Picked up                               pickedUp
RR: Delivery option requested               inTransit
RS: Returning package to shipper            returned
HL: Ready for pickup                        readyForPickup

//unified code
delivered
exception
inTransit
pickedUp
returned
orderProcessed
readyForPickup
 

-------------------- Enable Application Insights----------

1. Go to Azure portal
2. Create a resource > Monitoring + Management > Application Insights.
3. Provide Name,Application Type,Resource Group,Location
4. Click Create
5. Select Overview> Essentials > copy Instrumentation Key
6. npm install applicationinsights --save
Code :
const appInsights = require("applicationinsights");
appInsights.setup("7c370e26-7a3b-4483-9bae-a0164986dbcf");
appInsights.start();
var telemetry = appInsights.defaultClient;
Logger.info = function (msg) {
    telemetry.trackTrace({message: 'Wineshiping message : '+ msg});
};

Process
1. Get first 5 digits of tracking no. That is account no. Get user name, password as per following logic
2. Get token by calling http get request with header. Token will be available in Token header of response. Body will have "authorized". https://api.gso.com/Rest/v1/token, Headers will be: AccountNumber,UserName, Password
3. Tracking info url is: https://api.gso.com/Rest/v1/TrackShipment?TrackingNumber=508741111116172&AccountNumber=50874. Two headers: 1) Token 2) Content-Type: application/json




UPS
If AccountNo = "50308" Then
            gsotrackrequest.AccountNumber = AccountNo
            userinfo.UserName = "Wineshipping"
            userinfo.Password = "WS50308"
        ElseIf AccountNo = "50874" Then
            gsotrackrequest.AccountNumber = AccountNo
            userinfo.UserName = "VintageLogistics"
            userinfo.Password = "VL50874"
        ElseIf AccountNo = "60278" Then
            gsotrackrequest.AccountNumber = AccountNo
            userinfo.UserName = "Wineshipping"
            userinfo.Password = "WS60278"
        ElseIf AccountNo = "11111" Then
            gsotrackrequest.AccountNumber = "50874"
            userinfo.UserName = "VintageLogistics"
            userinfo.Password = "VL50874"
        End If


https://api.gso.com/Rest/v1/token

USPS error:


For each and ever USPS tracking number, I am getting same error message. Previously we got data but now we are not able to get any data. Is it possible to check from your side and let us know.
Error message is:
A status update is not yet available on your package. It will be available when the shipper provides an update or the package is delivered to USPS. Check back soon. Sign up for Informed Delivery<SUP>&reg;</SUP> to receive notifications for packages addressed to you.


URL is: http://production.shippingapis.com/ShippingAPI.dll?API=TrackV2&XML=%3CTrackFieldRequest%20USERID=%22487WINES7756%22%3E%3CTrackID%20ID=%229400110200881650000000%22%3E%3C/TrackID%3E%3C/TrackFieldRequest%3E

// script for PackageHistory table
CREATE TABLE [dbo].[PackageHistory](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[rn] [varchar](50) NOT NULL,
	[TrackingNo] [varchar](50) NOT NULL,
	[ShippingAgentCode] [varchar](50) NOT NULL,
	[ActivityJson] [nvarchar](4000) NULL,
	[IsDeleted] [bit] NOT NULL,
 CONSTRAINT [PK_PackageHistory] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


